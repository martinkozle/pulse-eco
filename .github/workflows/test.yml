name: Test

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/test.yml
      - pulseeco/**
      - tests/**
      - scripts/lint.sh
      - scripts/cov.sh
      - pyproject.toml
      - uv.lock
      - codecov.yml
      - pytest.ini
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/test.yml
      - pulseeco/**
      - tests/**
      - scripts/lint.sh
      - scripts/cov.sh
      - pyproject.toml
      - uv.lock
      - codecov.yml
      - pytest.ini
  schedule:
    - cron: "0 6 * * 6"
  workflow_dispatch:

concurrency:
  group: test-${{ github.head_ref }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

jobs:
  test:
    name: Python ${{ matrix.python-version }} on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - if: matrix.python-version == '3.9' && runner.os == 'Linux'
        name: Lint
        run: ./scripts/lint.sh

      - name: Run tests
        run: ./scripts/cov.sh

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: .
          files: ./coverage.xml
          verbose: true
